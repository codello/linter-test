name: Run Linters
on:
  workflow_call:
    inputs:
      linters:
        description: "A comma-separated list of linters to be run."
        type: string
        required: true

permissions:
  contents: read

jobs:
  prepare:
    name: Prepare Linters
    runs-on: ubuntu-latest
    outputs:
      linters: ${{ steps.linters.outputs.json }}
    steps:
      - name: Prepare Linters
        id: linters
        run: |
          echo -n "json=" >> "$GITHUB_OUTPUT"
          echo "$LINTERS" | jq --raw-input --compact-output 'split(",") | map(gsub("^\\s+|\\s+$";"")) | map(select(length > 0))' >> "$GITHUB_OUTPUT"
        env:
          LINTERS: ${{ inputs.linters }}

  gomodtidy:
    name: Tidy go.mod File
    runs-on: ubuntu-latest
    needs: [ prepare ]
    strategy:
      matrix:
        run: ${{ contains(fromJSON(needs.prepare.outputs.linters), 'gomodtidy') && fromJson('["gomodtidy", "foobar"]') || fromJson('[]') }}
        exclude:
          - run: gomodtidy
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup Golang
        uses: actions/setup-go@v5
        with:
          # TODO: Make configurable
          go-version-file: go.mod
      - name: Run go mod tidy
        run: go mod tidy
      - name: Check for changes
        run: git diff --exit-code
